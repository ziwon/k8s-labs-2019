---
apiVersion: v1
kind: Service
metadata:
  name: mongo
  labels:
    app: mongo
spec:
  ports:
  - port: 27017
    targetPort: 27017
  clusterIP: None
  selector:
    app: mongo
---
kind: StorageClass
apiVersion: storage.k8s.io/v1beta1
metadata:
  name: mongo-pv
provisioner: kubernetes.io/aws-ebs
parameters:
  type: gp2
  fsType: xfs
---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: mongo
spec:
  serviceName: "mongo"
  replicas: 3
  template:
    metadata:
      labels:
        app: mongo
    spec:
      nodeSelector:
        kops.k8s.io/instancegroup: backend
      terminationGracePeriodSeconds: 10
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - mongo
            topologyKey: "kubernetes.io/hostname"
      initContainers:
      - name: disable
        image: busybox
        volumeMounts:
        - name: host-sys
          mountPath: /host-sys
        command: ['sh', '-c', '[ -d /host-sys/kernel/mm/transparent_hugepage/ ] && echo never > /host-sys/kernel/mm/transparent_hugepage/enabled']
      containers:
      - name: mongo
        image: mongo
        ports:
        - containerPort: 27017
        command:
        - "mongod"
        - "--replSet"
        - rs0
        - "--auth"
        - "--clusterAuthMode"
        - keyFile
        - "--keyFile"
        - /etc/secrets/mongo-key
        - "--setParameter"
        - authenticationMechanisms=SCRAM-SHA-1
        - "--bind_ip"
        - 0.0.0.0
        lifecycle:
          postStart:
            exec:
              command:
              - 'sh'
              - '-c'
              - >
                sleep 10;
                if [ "$HOSTNAME" = "mongo-2" ]; then
                  mongo --eval 'rs.initiate({ _id: "rs0", protocolVersion: 1, members: [{ _id: 0, host: "mongo-0.mongo.default.svc.cluster.local:27017" }, { _id: 1, host: "mongo-1.mongo.default.svc.cluster.local:27017" }, { _id: 2, host: "mongo-2.mongo.default.svc.cluster.local:27017" }] });';
                fi;
          volumeMounts:
          - name: mongo-persistent-storage
            mountPath: /data/db
          - name: mongo-key
            mountPath: /etc/secrets
            readOnly: true
      volumes:
      - name: mongo-key
        secret:
          defaultMode: 0400
          secretName: mongo-key
      - name: host-sys
        hostPath:
          path: /sys
  volumeClaimTemplates:
  - metadata:
      name: mongo-persistent-storage
      annotations:
        volume.beta.kubernetes.io/storage-class: "mongo-pv"
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 2Gi
