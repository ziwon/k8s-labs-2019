# Prometheus Operator Configuration
# https://github.com/helm/charts/blob/master/stable/prometheus-operator/values.yaml
#

coreDns:
  enabled: false

alertmanager:
  alertmanagerSpec:
    externalUrl: "https://${CLUSTER_DOMAIN}/alertmanager"
  config:
    global:
      resolve_timeout: 5m
    route:
      group_by: ['job']
      group_wait: 30s
      group_interval: 5m
      repeat_interval: 12h
      receiver: 'slack'
      routes:
      - match:
          alertname: Watchdog
        receiver: 'null'
    inhibit_rules:
      - target_match_re:
           alertname: '.+Overcommit'
        source_match:
           alertname: 'Watchdog'
        equal: ['prometheus']
    receivers:
    - name: 'null'
    - name: 'slack'
      slack_configs:
      - api_url: 'https://hooks.slack.com/services/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'
        send_resolved: true
        channel: '#alert'
        title: '[{{ .Status | toUpper }}{{ if eq .Status "firing" }}:{{ .Alerts.Firing | len }}{{ end }}] Monitoring Event Notification'
        text: |-
          {{ range .Alerts }}
            *Alert:* {{ .Labels.alertname }} - `{{ .Labels.severity }}`
            *Description:* {{ .Annotations.message }}
            *Graph:* <{{ .GeneratorURL }}|:chart_with_upwards_trend:> *Runbook:* <{{ .Annotations.runbook_url }}|:spiral_note_pad:>
            *Details:*
            {{ range .Labels.SortedPairs }} â€¢ *{{ .Name }}:* `{{ .Value }}`
            {{ end }}
          {{ end }}

prometheus:
  prometheusSpec:
    # Retention will be 120d in production mode, 7d in local mode
    retention: "7d"
    #storageSpec:
    storage:
      volumeClaimTemplate:
        spec:
          # with ssd
            # storageClassName: ssd
          # with local-path
          storageClassName: local-path
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              # At the time of writing this, Prometheus ingests about 1500
              # samples/sec, which should result it ~17GB for the 120 days of
              # retention.
              # If higher ingestion throughput is observed, this should be
              # adjusted linearly.
              storage: 1Gi

# Subcharts
grafana:
  # Load dashboards from configmaps with a given label across all namespaces.
  sidecar:
    dashboards:
      enabled: true
      label: grafana
  grafana.ini:
    server:
      domain: ${CLUSTER_DOMAIN}
      root_url: https://${CLUSTER_DOMAIN}/grafana/

